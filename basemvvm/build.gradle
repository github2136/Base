apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'maven-publish'
apply plugin: 'kotlin-kapt'

def lib = rootProject.ext.dependencies
def version = rootProject.ext.android

android {
    compileSdkVersion version.compileSdkVersion
    defaultConfig {
        minSdkVersion version.minSdkVersion
        targetSdkVersion version.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    afterEvaluate {
        publishing {
            publications {
                maven(MavenPublication) {
                    artifact sourceJar // 增加上传源码的 task
                    afterEvaluate { artifact(tasks.getByName("bundleReleaseAar")) } //生成aar包
                    groupId = 'com.github.github2136.Base'
                    artifactId = 'basemvvm'
                    version = '1.0'
                }
            }
        }
    }
    android.libraryVariants.all { var ->
        var.outputs.all { output ->
            outputFileName = "basemvvm-${var.buildType.name}-${defaultConfig.versionName}-${releaseTime()}.aar"
        }
    }
}
task sourceJar(type: Jar) {
    from android.sourceSets.main.java.getSrcDirs() // 源码路径
    archiveClassifier = "sources-${android.defaultConfig.versionName}-${releaseTime()}"
}
artifacts {
    archives sourceJar
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Android库
    implementation lib["android-appcompat"]
    implementation lib["android-recyclerview"]
    implementation lib["android-material"]
    compileOnly lib["android-swiperefreshlayout"]
    compileOnly lib["core-ktx"]
    compileOnly lib["android-viewmodel-ktx"]
    compileOnly lib["android-lifecycle-ktx"]
    //协程
    implementation lib["android-coroutines"]
    //gson
    compileOnly lib['gson']
    //工具类
    compileOnly lib["android-util"]
    //logcat日志打印
    compileOnly lib["logger"]
    //okhttp
    compileOnly lib["okhttp"]
    compileOnly lib["okhttp-retrofit"]
    compileOnly lib["okhttp-gson"]

    androidTestImplementation lib["android-test"]
    testImplementation lib["junit"]
    androidTestImplementation lib["espresso"]
}
static def releaseTime() {
    return new Date().format("MMdd", TimeZone.getTimeZone("GMT+08"))
}
